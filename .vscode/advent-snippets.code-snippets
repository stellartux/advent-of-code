{
	"Advent of Code Julia": {
		"scope": "julia",
		"prefix": "#!advent",
		"body": [
			"#!/usr/bin/env julia",
			"# usage: julia ${2:1}.jl [FILENAME]",
			"",
			"module AOC20${1:25}Day${2:1}",
			"",
			"function load(file::AbstractString)",
			"\t${0}",
			"end",
			"",
			"function partone(input)",
			"",
			"end",
			"",
			"# function parttwo(input)",
			"",
			"# end",
			"",
			"if abspath(PROGRAM_FILE) == @__FILE__",
			"\tinput = load(get(ARGS, 1, joinpath(@__DIR__, \"input.txt\")))",
			"\tprintln(partone(input))",
			"\t# println(parttwo(input))",
			"elseif isinteractive()",
			"\tusing REPL",
			"\tREPL.activate(AOC20${1:25}Day${2:1})",
			"end",
			"",
			"end # module",
			"",
		],
	},
	"Advent of Code Prolog": {
		"scope": "prolog",
		"prefix": "#!advent",
		"body": [
			"#!/usr/bin/env swipl",
			"% usage: swipl ${2:1}.pl [FILENAME]",
			"",
			":- module(aoc20${1:24}day${2:1}, []).",
			":- module(aoc20${1:24}day${2:1}).",
			":- initialization(main, main).",
			":- use_module(library(clpfd)).",
			":- use_module(library(dcg/basics)).",
			":- use_module(library(dcg/high_order)).",
			"",
			"load(Result) --> ${0:[]}.",
			"",
			"part_one(Input, Result) :-",
			"\tInput = Result.",
			"",
			"part_two(Input, Result) :-",
			"\tInput = Result.",
			"",
			"main([File]) :-",
			"\tonce(phrase_from_file(load(Input), File)),",
			"\tpart_one(Input, ResultOne),",
			"\twriteln(ResultOne),",
			"\tpart_two(Input, ResultTwo),",
			"\twriteln(ResultTwo).",
			"",
			"main([]) :- main(['input.txt']).",
			"",
		],
	},
	"Advent of Code Shell": {
		"prefix": "#!advent",
		"scope": "shellscript",
		"body": [
			"#!/bin/sh",
			"# usage: sh ${1:1}.sh FILENAME",
			"set -eu",
			"",
			"if [ $# -ne 1 ]; then",
			"\techo \"usage: sh ${1:1}.sh FILENAME\"",
			"\texit 1",
			"elif [ ! -r \"\\$1\" ]; then",
			"\techo \"File not found.\"",
			"\texit 1",
			"fi",
			"",
			"$0",
			"",
		]
	}
}
